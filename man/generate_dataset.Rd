% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_dataset.R
\name{generate_dataset}
\alias{generate_dataset}
\title{Generate a dataset}
\usage{
generate_dataset(
  n_obs = 10L,
  n_vars = 20L,
  x_type = "numeric_matrix",
  layer_types = c("numeric_matrix", "numeric_dense", "numeric_csparse",
    "numeric_rsparse", "numeric_matrix_with_nas", "numeric_dense_with_nas",
    "numeric_csparse_with_nas", "numeric_rsparse_with_nas", "integer_matrix",
    "integer_dense", "integer_csparse", "integer_rsparse", "integer_matrix_with_nas",
    "integer_dense_with_nas", "integer_csparse_with_nas", "integer_rsparse_with_nas"),
  obs_types = c("character", "integer", "factor", "factor_ordered", "logical", "numeric",
    "character_with_nas", "integer_with_nas", "factor_with_nas",
    "factor_ordered_with_nas", "logical_with_nas", "numeric_with_nas"),
  var_types = c("character", "integer", "factor", "factor_ordered", "logical", "numeric",
    "character_with_nas", "integer_with_nas", "factor_with_nas",
    "factor_ordered_with_nas", "logical_with_nas", "numeric_with_nas"),
  obsm_types = c("numeric_matrix", "numeric_dense", "numeric_csparse", "numeric_rsparse",
    "numeric_matrix_with_nas", "numeric_dense_with_nas", "numeric_csparse_with_nas",
    "numeric_rsparse_with_nas", "integer_matrix", "integer_dense", "integer_csparse",
    "integer_rsparse", "integer_matrix_with_nas", "integer_dense_with_nas",
    "integer_csparse_with_nas", "integer_rsparse_with_nas", "character", "integer",
    "factor", "factor_ordered", "logical", "numeric", "character_with_nas",
    "integer_with_nas", "factor_with_nas", 
 "factor_ordered_with_nas",
    "logical_with_nas", "numeric_with_nas"),
  varm_types = c("numeric_matrix", "numeric_dense", "numeric_csparse", "numeric_rsparse",
    "numeric_matrix_with_nas", "numeric_dense_with_nas", "numeric_csparse_with_nas",
    "numeric_rsparse_with_nas", "integer_matrix", "integer_dense", "integer_csparse",
    "integer_rsparse", "integer_matrix_with_nas", "integer_dense_with_nas",
    "integer_csparse_with_nas", "integer_rsparse_with_nas", "character", "integer",
    "factor", "factor_ordered", "logical", "numeric", "character_with_nas",
    "integer_with_nas", "factor_with_nas", 
 "factor_ordered_with_nas",
    "logical_with_nas", "numeric_with_nas"),
  obsp_types = c("numeric_matrix", "numeric_dense", "numeric_csparse", "numeric_rsparse",
    "numeric_matrix_with_nas", "numeric_dense_with_nas", "numeric_csparse_with_nas",
    "numeric_rsparse_with_nas", "integer_matrix", "integer_dense", "integer_csparse",
    "integer_rsparse", "integer_matrix_with_nas", "integer_dense_with_nas",
    "integer_csparse_with_nas", "integer_rsparse_with_nas"),
  varp_types = c("numeric_matrix", "numeric_dense", "numeric_csparse", "numeric_rsparse",
    "numeric_matrix_with_nas", "numeric_dense_with_nas", "numeric_csparse_with_nas",
    "numeric_rsparse_with_nas", "integer_matrix", "integer_dense", "integer_csparse",
    "integer_rsparse", "integer_matrix_with_nas", "integer_dense_with_nas",
    "integer_csparse_with_nas", "integer_rsparse_with_nas"),
  format = c("list", "AnnData", "SingleCellExperiment", "Seurat")
)
}
\arguments{
\item{n_obs}{Number of observations to generate}

\item{n_vars}{Number of variables to generate}

\item{x_type}{Type of matrix to generate for X}

\item{layer_types}{Types of matrices to generate for layers}

\item{obs_types}{Types of vectors to generate for obs}

\item{var_types}{Types of vectors to generate for var}

\item{obsm_types}{Types of matrices to generate for obsm}

\item{varm_types}{Types of matrices to generate for varm}

\item{obsp_types}{Types of matrices to generate for obsp}

\item{varp_types}{Types of matrices to generate for varp}

\item{format}{Object type to output, one of "list", "AnnData",
"SingleCellExperiment", or "Seurat".}
}
\value{
Object containing the generated dataset as defined by \code{output}
}
\description{
Generate a dataset with different types of columns and layers
}
\examples{
dummy <- generate_dataset()
dummy <- generate_dataset(format = "AnnData")
dummy <- generate_dataset(format = "SingleCellExperiment")
dummy <- generate_dataset(format = "Seurat")
}
